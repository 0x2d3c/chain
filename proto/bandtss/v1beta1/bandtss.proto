syntax = "proto3";
package bandtss.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package            = "github.com/bandprotocol/chain/v2/x/bandtss/types";
option (gogoproto.equal_all) = true;

// Member maintains member information for monitoring their liveness activity.
message Member {
  option (gogoproto.equal) = true;

  // address is the address of the member.
  string address = 1;
  // is_active is a flag to indicate whether a member is active or not.
  bool is_active = 2;
  // since is a block timestamp when a member has been activated/deactivated/jailed
  google.protobuf.Timestamp since = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  // last_active is a latest block timestamp when a member is active
  google.protobuf.Timestamp last_active = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message SigningFee {
  option (gogoproto.equal) = true;

  // signing_ids is a list of signing IDs.
  uint64 signing_id = 1 [
    (gogoproto.customname) = "SigningID",
    (gogoproto.casttype)   = "github.com/bandprotocol/chain/v2/pkg/tss.SigningID"
  ];
  // fee is the total tokens that will be paid for this signing
  repeated cosmos.base.v1beta1.Coin fee = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  // requester is the address of requester who paid for the Bandtss fee.
  string requester = 3;
}
