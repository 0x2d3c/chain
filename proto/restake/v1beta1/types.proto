syntax = "proto3";
package restake.v1beta1;

option go_package = "github.com/bandprotocol/chain/v2/x/restake/types";

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

// Key message represents a key definition.
message Key {
  option (gogoproto.equal) = true;

  // Name is the name of the key.
  string name = 1;

  // IsActive is the status of the key
  bool is_active = 2;

  // RewardPerShares is a list of reward per share of each reward.
  repeated cosmos.base.v1beta1.DecCoin reward_per_shares = 3 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];

  // TotalLock is the total of locked power of the key.
  string total_lock = 4 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];

  // CurrentRewards is a list of current rewards of the key.
  repeated cosmos.base.v1beta1.DecCoin current_rewards = 5 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}

// Stake message represents a stake detail.
message Stake {
  option (gogoproto.equal) = true;

  // Address is the owner address of the stake.
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // Key is the key that this stake is locked to.
  string key = 2;

  // Amount is the locked power amount.
  string amount = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];

  // RewardDebts is a list of reward debt for each reward.
  repeated cosmos.base.v1beta1.DecCoin reward_debts = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}

// Reward message represents a reward detail.
message Reward {
  option (gogoproto.equal) = true;

  // Key is the key that this reward belongs to.
  string key = 1;

  // Amount is a list of rewards.
  repeated cosmos.base.v1beta1.DecCoin amounts = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}

// Remainder message represents the remainder state data.
message Remainder {
  option (gogoproto.equal) = true;

  // Amount is a list of remainder amounts in the module.
  repeated cosmos.base.v1beta1.DecCoin amounts = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}

// Lock message represents a lock definition.
message Lock {
  option (gogoproto.equal) = true;

  // Key is the key that this lock belongs to.
  string key = 1;

  // Amount is a the number of locked power.
  string amount = 2 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}
