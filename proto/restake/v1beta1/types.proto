syntax = "proto3";
package restake.v1beta1;

option go_package = "github.com/bandprotocol/chain/v2/x/restake/types";

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

// Reward message defines a structure for storing reward details.
message Reward {
  option (gogoproto.equal) = true;

  // Unique identifier for the reward.
  string key = 1;
  // List of reward amounts in different denominations.
  repeated cosmos.base.v1beta1.Coin coins = 2 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// Key message defines ...
message Key {
  option (gogoproto.equal) = true;

  string name      = 1;
  bool   is_active = 2;
}

// Lock message defines ...
message Lock {
  option (gogoproto.equal) = true;

  string address = 1;
  string key     = 2;
  string amount  = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}
