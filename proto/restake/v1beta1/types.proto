syntax = "proto3";
package restake.v1beta1;

option go_package = "github.com/bandprotocol/chain/v2/x/restake/types";

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

// Reward message defines a structure for storing reward details.
message Reward {
  option (gogoproto.equal) = true;

  // Unique identifier for the reward.
  string key = 1;
  // List of reward amounts in different denominations.
  repeated cosmos.base.v1beta1.DecCoin amounts = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}

// Key message defines ...
message Key {
  option (gogoproto.equal) = true;

  string   name                                          = 1;
  bool     is_active                                     = 2;
  repeated cosmos.base.v1beta1.DecCoin reward_per_shares = 3 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
  string total_lock = 4 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
  repeated cosmos.base.v1beta1.DecCoin current_rewards = 5 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}

// Lock message defines ...
message Lock {
  option (gogoproto.equal) = true;

  string key    = 1;
  string amount = 2 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}

// Staker message defines ...
message Stake {
  option (gogoproto.equal) = true;

  string address = 1;
  string key     = 2;
  string amount  = 3 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
  repeated cosmos.base.v1beta1.DecCoin reward_debts = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}

// Remainder message defines ...
message Remainder {
  option (gogoproto.equal) = true;

  repeated cosmos.base.v1beta1.DecCoin amounts = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins",
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true
  ];
}
